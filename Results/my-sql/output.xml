<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.6.5 on win32)" generated="20200320 14:28:20.238" rpa="false">
<suite id="s1" name="MySql Tests" source="C:\development\robot-scripts\front-office\tests\MySql_Tests.robot">
<test id="s1-t1" name="Insert a Record">
<kw name="Connect" library="MySql" type="setup">
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='ahmedd', user='root', password="", host='127.0.0.1', port=3306</arg>
</arguments>
<msg timestamp="20200320 14:28:20.749" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='ahmedd', user='root', password="", host='127.0.0.1', port=3306)) </msg>
<status status="PASS" starttime="20200320 14:28:20.537" endtime="20200320 14:28:20.779"></status>
</kw>
<status status="PASS" starttime="20200320 14:28:20.537" endtime="20200320 14:28:20.780"></status>
</kw>
<kw name="Save Current Row Count" library="MySql">
<kw name="Row Count" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query the database and returns the number of rows from the query. Set
optional input `sansTran` to True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>SELECT * FROM birds;</arg>
</arguments>
<assign>
<var>${current_row_count}</var>
</assign>
<msg timestamp="20200320 14:28:20.781" level="INFO">Executing : Row Count  |  SELECT * FROM birds; </msg>
<msg timestamp="20200320 14:28:20.782" level="INFO">${current_row_count} = 8</msg>
<status status="PASS" starttime="20200320 14:28:20.781" endtime="20200320 14:28:20.782"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${PREVIOUS_ROW_COUNT}</arg>
<arg>${current_row_count}</arg>
</arguments>
<msg timestamp="20200320 14:28:20.783" level="INFO">${PREVIOUS_ROW_COUNT} = 8</msg>
<status status="PASS" starttime="20200320 14:28:20.782" endtime="20200320 14:28:20.783"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${current_row_count}</arg>
</arguments>
<msg timestamp="20200320 14:28:20.784" level="INFO">8</msg>
<status status="PASS" starttime="20200320 14:28:20.783" endtime="20200320 14:28:20.784"></status>
</kw>
<status status="PASS" starttime="20200320 14:28:20.780" endtime="20200320 14:28:20.784"></status>
</kw>
<kw name="Get Input Data" library="MySql">
<kw name="Get Value From User" library="Dialogs">
<doc>Pauses test execution and asks user to input a value.</doc>
<arguments>
<arg>Enter a scientific_name</arg>
</arguments>
<assign>
<var>${name}</var>
</assign>
<msg timestamp="20200320 14:28:34.071" level="INFO">${name} = dog</msg>
<status status="PASS" starttime="20200320 14:28:20.785" endtime="20200320 14:28:34.072"></status>
</kw>
<kw name="Get Value From User" library="Dialogs">
<doc>Pauses test execution and asks user to input a value.</doc>
<arguments>
<arg>Enter a common_name</arg>
</arguments>
<assign>
<var>${common}</var>
</assign>
<msg timestamp="20200320 14:28:41.431" level="INFO">${common} = monkey</msg>
<status status="PASS" starttime="20200320 14:28:34.072" endtime="20200320 14:28:41.432"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${ScientificName}</arg>
<arg>${name}</arg>
</arguments>
<msg timestamp="20200320 14:28:41.437" level="INFO">${ScientificName} = dog</msg>
<status status="PASS" starttime="20200320 14:28:41.433" endtime="20200320 14:28:41.437"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${CommonName}</arg>
<arg>${common}</arg>
</arguments>
<msg timestamp="20200320 14:28:41.444" level="INFO">${CommonName} = monkey</msg>
<status status="PASS" starttime="20200320 14:28:41.437" endtime="20200320 14:28:41.444"></status>
</kw>
<status status="PASS" starttime="20200320 14:28:20.784" endtime="20200320 14:28:41.445"></status>
</kw>
<kw name="Insert Record" library="MySql">
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>INSERT INTO birds (scientific_name, common_name) VALUES ('${ScientificName}', '${CommonName}')</arg>
</arguments>
<assign>
<var>${insert_command}</var>
</assign>
<msg timestamp="20200320 14:28:41.448" level="INFO">${insert_command} = INSERT INTO birds (scientific_name, common_name) VALUES ('dog', 'monkey')</msg>
<status status="PASS" starttime="20200320 14:28:41.447" endtime="20200320 14:28:41.448"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>${insert_command}</arg>
</arguments>
<msg timestamp="20200320 14:28:41.449" level="INFO">Executing : Execute SQL String  |  INSERT INTO birds (scientific_name, common_name) VALUES ('dog', 'monkey') </msg>
<status status="PASS" starttime="20200320 14:28:41.448" endtime="20200320 14:28:41.504"></status>
</kw>
<status status="PASS" starttime="20200320 14:28:41.446" endtime="20200320 14:28:41.504"></status>
</kw>
<kw name="Verify New Record Added" library="MySql">
<kw name="Row Count" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query the database and returns the number of rows from the query. Set
optional input `sansTran` to True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>SELECT * FROM birds;</arg>
</arguments>
<assign>
<var>${new_row_count}</var>
</assign>
<msg timestamp="20200320 14:28:41.506" level="INFO">Executing : Row Count  |  SELECT * FROM birds; </msg>
<msg timestamp="20200320 14:28:41.508" level="INFO">${new_row_count} = 9</msg>
<status status="PASS" starttime="20200320 14:28:41.506" endtime="20200320 14:28:41.509"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${new_row_count}</arg>
</arguments>
<msg timestamp="20200320 14:28:41.510" level="INFO">9</msg>
<status status="PASS" starttime="20200320 14:28:41.509" endtime="20200320 14:28:41.510"></status>
</kw>
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<arguments>
<arg>${new_row_count}</arg>
<arg>${PREVIOUS_ROW_COUNT + 1 }</arg>
</arguments>
<status status="PASS" starttime="20200320 14:28:41.510" endtime="20200320 14:28:41.511"></status>
</kw>
<status status="PASS" starttime="20200320 14:28:41.505" endtime="20200320 14:28:41.512"></status>
</kw>
<kw name="Disconnect" library="MySql" type="teardown">
<kw name="Disconnect From Database" library="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<msg timestamp="20200320 14:28:41.514" level="INFO">Executing : Disconnect From Database</msg>
<status status="PASS" starttime="20200320 14:28:41.513" endtime="20200320 14:28:41.514"></status>
</kw>
<status status="PASS" starttime="20200320 14:28:41.512" endtime="20200320 14:28:41.514"></status>
</kw>
<tags>
<tag>MySqlDB</tag>
</tags>
<status status="PASS" starttime="20200320 14:28:20.536" endtime="20200320 14:28:41.515" critical="yes"></status>
</test>
<test id="s1-t2" name="Verify Insert Contains Correct Input Data">
<kw name="Connect" library="MySql" type="setup">
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='ahmedd', user='root', password="", host='127.0.0.1', port=3306</arg>
</arguments>
<msg timestamp="20200320 14:28:41.518" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='ahmedd', user='root', password="", host='127.0.0.1', port=3306)) </msg>
<status status="PASS" starttime="20200320 14:28:41.517" endtime="20200320 14:28:41.520"></status>
</kw>
<status status="PASS" starttime="20200320 14:28:41.517" endtime="20200320 14:28:41.520"></status>
</kw>
<kw name="Verify Last Record" library="MySql">
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<arguments>
<arg>SELECT * FROM birds ORDER BY bird_id DESC LIMIT 1</arg>
</arguments>
<assign>
<var>${queryResults}</var>
</assign>
<msg timestamp="20200320 14:28:41.521" level="INFO">Executing : Query  |  SELECT * FROM birds ORDER BY bird_id DESC LIMIT 1 </msg>
<msg timestamp="20200320 14:28:41.522" level="INFO">${queryResults} = ((9, 'dog', 'monkey'),)</msg>
<status status="PASS" starttime="20200320 14:28:41.521" endtime="20200320 14:28:41.522"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${queryResults[0][2]}</arg>
<arg>${CommonName}</arg>
</arguments>
<status status="PASS" starttime="20200320 14:28:41.522" endtime="20200320 14:28:41.523"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${queryResults[0][2]}</arg>
</arguments>
<msg timestamp="20200320 14:28:41.524" level="INFO">monkey</msg>
<status status="PASS" starttime="20200320 14:28:41.523" endtime="20200320 14:28:41.524"></status>
</kw>
<status status="PASS" starttime="20200320 14:28:41.521" endtime="20200320 14:28:41.524"></status>
</kw>
<kw name="Disconnect" library="MySql" type="teardown">
<kw name="Disconnect From Database" library="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<msg timestamp="20200320 14:28:41.526" level="INFO">Executing : Disconnect From Database</msg>
<status status="PASS" starttime="20200320 14:28:41.526" endtime="20200320 14:28:41.526"></status>
</kw>
<status status="PASS" starttime="20200320 14:28:41.525" endtime="20200320 14:28:41.527"></status>
</kw>
<tags>
<tag>MySqlDB</tag>
</tags>
<status status="PASS" starttime="20200320 14:28:41.516" endtime="20200320 14:28:41.527" critical="yes"></status>
</test>
<test id="s1-t3" name="Log All Rows">
<kw name="Connect" library="MySql" type="setup">
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<arguments>
<arg>pymysql</arg>
<arg>database='ahmedd', user='root', password="", host='127.0.0.1', port=3306</arg>
</arguments>
<msg timestamp="20200320 14:28:41.529" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(database='ahmedd', user='root', password="", host='127.0.0.1', port=3306)) </msg>
<status status="PASS" starttime="20200320 14:28:41.529" endtime="20200320 14:28:41.532"></status>
</kw>
<status status="PASS" starttime="20200320 14:28:41.528" endtime="20200320 14:28:41.532"></status>
</kw>
<kw name="Log All Rows" library="MySql">
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<arguments>
<arg>SELECT * FROM birds ORDER BY bird_id</arg>
</arguments>
<assign>
<var>${queryResults}</var>
</assign>
<msg timestamp="20200320 14:28:41.534" level="INFO">Executing : Query  |  SELECT * FROM birds ORDER BY bird_id </msg>
<msg timestamp="20200320 14:28:41.535" level="INFO">${queryResults} = ((1, 'Charadrius vociferus', 'Killdeer'), (2, 'Gavia immer', 'Great Northern Loon'), (3, 'Aix sponsa', 'Wood Duck'), (4, 'Chordeiles minor', 'Common Nighthawk'), (5, 'Sitta carolinensis', ' White-brea...</msg>
<status status="PASS" starttime="20200320 14:28:41.533" endtime="20200320 14:28:41.535"></status>
</kw>
<kw name="Log Many" library="BuiltIn">
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<arguments>
<arg>${queryResults}</arg>
</arguments>
<msg timestamp="20200320 14:28:41.535" level="INFO">((1, 'Charadrius vociferus', 'Killdeer'), (2, 'Gavia immer', 'Great Northern Loon'), (3, 'Aix sponsa', 'Wood Duck'), (4, 'Chordeiles minor', 'Common Nighthawk'), (5, 'Sitta carolinensis', ' White-breasted Nuthatch'), (6, 'Apteryx mantelli', 'North Island Brown Kiwi'), (7, 'dsfsds', 'daaaarrrrrrr'), (8, 'cow', 'leeeo'), (9, 'dog', 'monkey'))</msg>
<status status="PASS" starttime="20200320 14:28:41.535" endtime="20200320 14:28:41.535"></status>
</kw>
<status status="PASS" starttime="20200320 14:28:41.533" endtime="20200320 14:28:41.535"></status>
</kw>
<kw name="Disconnect" library="MySql" type="teardown">
<kw name="Disconnect From Database" library="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<msg timestamp="20200320 14:28:41.537" level="INFO">Executing : Disconnect From Database</msg>
<status status="PASS" starttime="20200320 14:28:41.537" endtime="20200320 14:28:41.537"></status>
</kw>
<status status="PASS" starttime="20200320 14:28:41.536" endtime="20200320 14:28:41.538"></status>
</kw>
<tags>
<tag>MySqlDB</tag>
</tags>
<status status="PASS" starttime="20200320 14:28:41.528" endtime="20200320 14:28:41.538" critical="yes"></status>
</test>
<doc>These are some MySql Database tests</doc>
<status status="PASS" starttime="20200320 14:28:20.240" endtime="20200320 14:28:41.540"></status>
</suite>
<statistics>
<total>
<stat pass="3" fail="0">Critical Tests</stat>
<stat pass="3" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="3" fail="0">MySqlDB</stat>
</tag>
<suite>
<stat pass="3" fail="0" id="s1" name="MySql Tests">MySql Tests</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
